{"version":3,"sources":["parser.js","html2json.js","discode.js","htmlparser.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA,AHSA;AELA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _html2json = require('./html2json');\n\nvar _html2json2 = _interopRequireDefault(_html2json);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Parser = function (_ParseJson) {\n  _inherits(Parser, _ParseJson);\n\n  function Parser() {\n    _classCallCheck(this, Parser);\n\n    return _possibleConstructorReturn(this, (Parser.__proto__ || Object.getPrototypeOf(Parser)).apply(this, arguments));\n  }\n\n  _createClass(Parser, [{\n    key: 'getRichTextJson',\n    value: function getRichTextJson(html) {\n      return _get(Parser.prototype.__proto__ || Object.getPrototypeOf(Parser.prototype), 'getHtmlJson', this).call(this, html);\n    }\n  }, {\n    key: 'definedCustomTag',\n    value: function definedCustomTag(options) {\n      var newOptions = {};\n      for (var i in options) {\n        newOptions[i] = options[i] ? options[i] : 'div';\n      }\n      _get(Parser.prototype.__proto__ || Object.getPrototypeOf(Parser.prototype), 'definedCustomTag', this).call(this, newOptions);\n    }\n  }]);\n\n  return Parser;\n}(_html2json2.default);\n\nvar parser = new Parser();\nexports.default = parser;","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _discode = require('./discode');\n\nvar _discode2 = _interopRequireDefault(_discode);\n\nvar _htmlparser = require('./htmlparser');\n\nvar _htmlparser2 = _interopRequireDefault(_htmlparser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar HtmlToJson = function () {\n  function HtmlToJson() {\n    _classCallCheck(this, HtmlToJson);\n\n    this.__placeImgeUrlHttps = 'https';\n    this.customTag = {};\n  }\n\n  _createClass(HtmlToJson, [{\n    key: 'removeDoctype',\n    value: function removeDoctype(html) {\n      return html.replace(/<\\?xml.*\\?>\\n/, '').replace(/<.*!doctype.*\\n/, '').replace(/<.*!DOCTYPE.*\\n/, '');\n    }\n  }, {\n    key: 'trimHtml',\n    value: function trimHtml(html) {\n      return html.replace(/\\r?\\n+/g, '').replace(/<!--.*?-->/ig, '').replace(/\\/\\*.*?\\*\\//ig, '').replace(/[ ]+</ig, '<');\n    }\n  }, {\n    key: 'definedCustomTag',\n    value: function definedCustomTag(options) {\n      this.customTag = options;\n    }\n  }, {\n    key: 'getHtmlJson',\n    value: function getHtmlJson(html) {\n      html = this.removeDoctype(html);\n      html = this.trimHtml(html);\n      html = _discode2.default.strDiscode(html);\n      var customTag = this.customTag;\n\n\n      var bufArray = [];\n      var results = {\n        children: []\n      };\n\n      (0, _htmlparser2.default)(html, {\n        start: function start(tag, attrs, unary) {\n          var node = {\n            name: tag\n          };\n\n          if (attrs.length !== 0) {\n            node.attrs = attrs.reduce(function (pre, attr) {\n              var name = attr.name;\n              var value = attr.value;\n              if (pre[name]) {\n                if (Array.isArray(pre[name])) {\n                  pre[name].push(value);\n                } else {\n                  pre[name] = [pre[name], value];\n                }\n              } else {\n                pre[name] = value;\n              }\n              return pre;\n            }, {});\n          }\n\n          node.attrs = Object.assign({}, node.attrs);\n          var hasClass = node.attrs.hasOwnProperty('class');\n          node.attrs.class = hasClass ? node.attrs.class + ' rich-' + node.name : 'rich-' + node.name;\n\n          if (node.name === 'img') {\n            var imgUrl = node.attrs.src;\n            if (imgUrl[0] === '') {\n              imgUrl.splice(0, 1);\n            }\n            imgUrl = _discode2.default.urlToHttpUrl(imgUrl, this.__placeImgeUrlHttps);\n            node.attrs.src = imgUrl;\n          }\n\n          if (node.name === 'source') {\n            results.source = node.attrs.src;\n          }\n\n          if (unary) {\n            var parent = bufArray[0] || results;\n            if (parent.children === undefined) {\n              parent.children = [];\n            }\n            parent.children.push(node);\n          } else {\n            bufArray.unshift(node);\n          }\n        },\n        end: function end(tag) {\n          var node = bufArray.shift();\n          if (node.name !== tag) console.error('invalid state: mismatch end tag');\n\n          if (node.name === 'video' && results.source) {\n            node.attrs.src = results.source;\n            delete results.source;\n          }\n\n          if (customTag.hasOwnProperty(node.name)) {\n            node.name = customTag[node.name];\n          }\n\n          if (bufArray.length === 0) {\n            results.children.push(node);\n          } else {\n            var parent = bufArray[0];\n            if (parent.children === undefined) {\n              parent.children = [];\n            }\n            parent.children.push(node);\n          }\n        },\n        chars: function chars(text) {\n          var node = {\n            text: text,\n            type: 'text'\n          };\n\n          if (bufArray.length === 0) {\n            results.children.push(node);\n          } else {\n            var parent = bufArray[0];\n            if (parent.children === undefined) {\n              parent.children = [];\n            }\n            parent.children.push(node);\n          }\n        },\n        comment: function comment(text) {}\n      });\n\n      return results;\n    }\n  }]);\n\n  return HtmlToJson;\n}();\n\nexports.default = HtmlToJson;","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Discode = function () {\n  function Discode() {\n    _classCallCheck(this, Discode);\n  }\n\n  _createClass(Discode, [{\n    key: 'strNumDiscode',\n    value: function strNumDiscode(str) {\n      str = str.replace(/&forall;/g, '∀');\n      str = str.replace(/&part;/g, '∂');\n      str = str.replace(/&exists;/g, '∃');\n      str = str.replace(/&empty;/g, '∅');\n      str = str.replace(/&nabla;/g, '∇');\n      str = str.replace(/&isin;/g, '∈');\n      str = str.replace(/&notin;/g, '∉');\n      str = str.replace(/&ni;/g, '∋');\n      str = str.replace(/&prod;/g, '∏');\n      str = str.replace(/&sum;/g, '∑');\n      str = str.replace(/&minus;/g, '−');\n      str = str.replace(/&lowast;/g, '∗');\n      str = str.replace(/&radic;/g, '√');\n      str = str.replace(/&prop;/g, '∝');\n      str = str.replace(/&infin;/g, '∞');\n      str = str.replace(/&ang;/g, '∠');\n      str = str.replace(/&and;/g, '∧');\n      str = str.replace(/&or;/g, '∨');\n      str = str.replace(/&cap;/g, '∩');\n      str = str.replace(/&cap;/g, '∪');\n      str = str.replace(/&int;/g, '∫');\n      str = str.replace(/&there4;/g, '∴');\n      str = str.replace(/&sim;/g, '∼');\n      str = str.replace(/&cong;/g, '≅');\n      str = str.replace(/&asymp;/g, '≈');\n      str = str.replace(/&ne;/g, '≠');\n      str = str.replace(/&le;/g, '≤');\n      str = str.replace(/&ge;/g, '≥');\n      str = str.replace(/&sub;/g, '⊂');\n      str = str.replace(/&sup;/g, '⊃');\n      str = str.replace(/&nsub;/g, '⊄');\n      str = str.replace(/&sube;/g, '⊆');\n      str = str.replace(/&supe;/g, '⊇');\n      str = str.replace(/&oplus;/g, '⊕');\n      str = str.replace(/&otimes;/g, '⊗');\n      str = str.replace(/&perp;/g, '⊥');\n      str = str.replace(/&sdot;/g, '⋅');\n      return str;\n    }\n  }, {\n    key: 'strGreeceDiscode',\n    value: function strGreeceDiscode(str) {\n      str = str.replace(/&Alpha;/g, 'Α');\n      str = str.replace(/&Beta;/g, 'Β');\n      str = str.replace(/&Gamma;/g, 'Γ');\n      str = str.replace(/&Delta;/g, 'Δ');\n      str = str.replace(/&Epsilon;/g, 'Ε');\n      str = str.replace(/&Zeta;/g, 'Ζ');\n      str = str.replace(/&Eta;/g, 'Η');\n      str = str.replace(/&Theta;/g, 'Θ');\n      str = str.replace(/&Iota;/g, 'Ι');\n      str = str.replace(/&Kappa;/g, 'Κ');\n      str = str.replace(/&Lambda;/g, 'Λ');\n      str = str.replace(/&Mu;/g, 'Μ');\n      str = str.replace(/&Nu;/g, 'Ν');\n      str = str.replace(/&Xi;/g, 'Ν');\n      str = str.replace(/&Omicron;/g, 'Ο');\n      str = str.replace(/&Pi;/g, 'Π');\n      str = str.replace(/&Rho;/g, 'Ρ');\n      str = str.replace(/&Sigma;/g, 'Σ');\n      str = str.replace(/&Tau;/g, 'Τ');\n      str = str.replace(/&Upsilon;/g, 'Υ');\n      str = str.replace(/&Phi;/g, 'Φ');\n      str = str.replace(/&Chi;/g, 'Χ');\n      str = str.replace(/&Psi;/g, 'Ψ');\n      str = str.replace(/&Omega;/g, 'Ω');\n      str = str.replace(/&alpha;/g, 'α');\n      str = str.replace(/&beta;/g, 'β');\n      str = str.replace(/&gamma;/g, 'γ');\n      str = str.replace(/&delta;/g, 'δ');\n      str = str.replace(/&epsilon;/g, 'ε');\n      str = str.replace(/&zeta;/g, 'ζ');\n      str = str.replace(/&eta;/g, 'η');\n      str = str.replace(/&theta;/g, 'θ');\n      str = str.replace(/&iota;/g, 'ι');\n      str = str.replace(/&kappa;/g, 'κ');\n      str = str.replace(/&lambda;/g, 'λ');\n      str = str.replace(/&mu;/g, 'μ');\n      str = str.replace(/&nu;/g, 'ν');\n      str = str.replace(/&xi;/g, 'ξ');\n      str = str.replace(/&omicron;/g, 'ο');\n      str = str.replace(/&pi;/g, 'π');\n      str = str.replace(/&rho;/g, 'ρ');\n      str = str.replace(/&sigmaf;/g, 'ς');\n      str = str.replace(/&sigma;/g, 'σ');\n      str = str.replace(/&tau;/g, 'τ');\n      str = str.replace(/&upsilon;/g, 'υ');\n      str = str.replace(/&phi;/g, 'φ');\n      str = str.replace(/&chi;/g, 'χ');\n      str = str.replace(/&psi;/g, 'ψ');\n      str = str.replace(/&omega;/g, 'ω');\n      str = str.replace(/&thetasym;/g, 'ϑ');\n      str = str.replace(/&upsih;/g, 'ϒ');\n      str = str.replace(/&piv;/g, 'ϖ');\n      str = str.replace(/&middot;/g, '·');\n      return str;\n    }\n  }, {\n    key: 'strcharacterDiscode',\n    value: function strcharacterDiscode(str) {\n      // 加入常用解析\n      str = str.replace(/&nbsp;/g, ' ');\n      str = str.replace(/&quot;/g, \"'\");\n      str = str.replace(/&amp;/g, '&');\n      str = str.replace(/&lt;/g, '<');\n      str = str.replace(/&gt;/g, '>');\n      str = str.replace(/&#8226;/g, '•');\n      return str;\n    }\n  }, {\n    key: 'strOtherDiscode',\n    value: function strOtherDiscode(str) {\n      str = str.replace(/&OElig;/g, 'Œ');\n      str = str.replace(/&oelig;/g, 'œ');\n      str = str.replace(/&Scaron;/g, 'Š');\n      str = str.replace(/&scaron;/g, 'š');\n      str = str.replace(/&Yuml;/g, 'Ÿ');\n      str = str.replace(/&fnof;/g, 'ƒ');\n      str = str.replace(/&circ;/g, 'ˆ');\n      str = str.replace(/&tilde;/g, '˜');\n      str = str.replace(/&ensp;/g, '');\n      str = str.replace(/&emsp;/g, '');\n      str = str.replace(/&thinsp;/g, '');\n      str = str.replace(/&zwnj;/g, '');\n      str = str.replace(/&zwj;/g, '');\n      str = str.replace(/&lrm;/g, '');\n      str = str.replace(/&rlm;/g, '');\n      str = str.replace(/&ndash;/g, '–');\n      str = str.replace(/&mdash;/g, '—');\n      str = str.replace(/&lsquo;/g, '‘');\n      str = str.replace(/&rsquo;/g, '’');\n      str = str.replace(/&sbquo;/g, '‚');\n      str = str.replace(/&ldquo;/g, '“');\n      str = str.replace(/&rdquo;/g, '”');\n      str = str.replace(/&bdquo;/g, '„');\n      str = str.replace(/&dagger;/g, '†');\n      str = str.replace(/&Dagger;/g, '‡');\n      str = str.replace(/&bull;/g, '•');\n      str = str.replace(/&hellip;/g, '…');\n      str = str.replace(/&permil;/g, '‰');\n      str = str.replace(/&prime;/g, '′');\n      str = str.replace(/&Prime;/g, '″');\n      str = str.replace(/&lsaquo;/g, '‹');\n      str = str.replace(/&rsaquo;/g, '›');\n      str = str.replace(/&oline;/g, '‾');\n      str = str.replace(/&euro;/g, '€');\n      str = str.replace(/&trade;/g, '™');\n      str = str.replace(/&larr;/g, '←');\n      str = str.replace(/&uarr;/g, '↑');\n      str = str.replace(/&rarr;/g, '→');\n      str = str.replace(/&darr;/g, '↓');\n      str = str.replace(/&harr;/g, '↔');\n      str = str.replace(/&crarr;/g, '↵');\n      str = str.replace(/&lceil;/g, '⌈');\n      str = str.replace(/&rceil;/g, '⌉');\n      str = str.replace(/&lfloor;/g, '⌊');\n      str = str.replace(/&rfloor;/g, '⌋');\n      str = str.replace(/&loz;/g, '◊');\n      str = str.replace(/&spades;/g, '♠');\n      str = str.replace(/&clubs;/g, '♣');\n      str = str.replace(/&hearts;/g, '♥');\n      str = str.replace(/&diams;/g, '♦');\n      str = str.replace(/&#39;/g, '\\'');\n      return str;\n    }\n  }, {\n    key: 'strMoreDiscode',\n    value: function strMoreDiscode(str) {\n      str = str.replace(/\\r\\n/g, '');\n      str = str.replace(/\\n/g, '');\n      str = str.replace(/code/g, 'wxxxcode-style');\n      return str;\n    }\n  }, {\n    key: 'strDiscode',\n    value: function strDiscode(str) {\n      str = this.strNumDiscode(str);\n      str = this.strGreeceDiscode(str);\n      str = this.strcharacterDiscode(str);\n      str = this.strOtherDiscode(str);\n      str = this.strMoreDiscode(str);\n      return str;\n    }\n  }, {\n    key: 'urlToHttpUrl',\n    value: function urlToHttpUrl(url, rep) {\n      var patt1 = new RegExp('^//');\n      var result = patt1.test(url);\n      if (result) {\n        url = rep + ':' + url;\n      }\n      return url;\n    }\n  }]);\n\n  return Discode;\n}();\n\nvar disCode = new Discode();\nexports.default = disCode;","\n\n/**\n * htmlParser改造自: https://github.com/blowsie/Pure-JavaScript-HTML5-Parser\n */\n\nvar startTag = /^<([-A-Za-z0-9_]+)((?:\\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/,\n    endTag = /^<\\/([-A-Za-z0-9_]+)[^>]*>/,\n    attr = /([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g;\n\n// Empty Elements - HTML 5\nvar empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr\");\n\n// Block Elements - HTML 5\nvar block = makeMap(\"a,address,code,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video\");\n\n// Inline Elements - HTML 5\nvar inline = makeMap(\"abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var\");\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar closeSelf = makeMap(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr\");\n\n// Attributes that have their values filled in disabled=\"disabled\"\nvar fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\");\n\n// Special Elements (can contain anything)\nvar special = makeMap(\"wxxxcode-style,script,style,view,scroll-view,block\");\n\nfunction HTMLParser(html, handler) {\n\tvar index,\n\t    chars,\n\t    match,\n\t    stack = [],\n\t    last = html;\n\tstack.last = function () {\n\t\treturn this[this.length - 1];\n\t};\n\n\twhile (html) {\n\t\tchars = true;\n\n\t\t// Make sure we're not in a script or style element\n\t\tif (!stack.last() || !special[stack.last()]) {\n\n\t\t\t// Comment\n\t\t\tif (html.indexOf(\"<!--\") == 0) {\n\t\t\t\tindex = html.indexOf(\"-->\");\n\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tif (handler.comment) handler.comment(html.substring(4, index));\n\t\t\t\t\thtml = html.substring(index + 3);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\n\t\t\t\t// end tag\n\t\t\t} else if (html.indexOf(\"</\") == 0) {\n\t\t\t\tmatch = html.match(endTag);\n\n\t\t\t\tif (match) {\n\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\tmatch[0].replace(endTag, parseEndTag);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\n\t\t\t\t// start tag\n\t\t\t} else if (html.indexOf(\"<\") == 0) {\n\t\t\t\tmatch = html.match(startTag);\n\n\t\t\t\tif (match) {\n\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\tmatch[0].replace(startTag, parseStartTag);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (chars) {\n\t\t\t\tindex = html.indexOf(\"<\");\n\t\t\t\tvar text = '';\n\t\t\t\twhile (index === 0) {\n\t\t\t\t\ttext += \"<\";\n\t\t\t\t\thtml = html.substring(1);\n\t\t\t\t\tindex = html.indexOf(\"<\");\n\t\t\t\t}\n\t\t\t\ttext += index < 0 ? html : html.substring(0, index);\n\t\t\t\thtml = index < 0 ? \"\" : html.substring(index);\n\n\t\t\t\tif (handler.chars) handler.chars(text);\n\t\t\t}\n\t\t} else {\n\n\t\t\thtml = html.replace(new RegExp(\"([\\\\s\\\\S]*?)<\\/\" + stack.last() + \"[^>]*>\"), function (all, text) {\n\t\t\t\ttext = text.replace(/<!--([\\s\\S]*?)-->|<!\\[CDATA\\[([\\s\\S]*?)]]>/g, \"$1$2\");\n\t\t\t\tif (handler.chars) handler.chars(text);\n\n\t\t\t\treturn \"\";\n\t\t\t});\n\n\t\t\tparseEndTag(\"\", stack.last());\n\t\t}\n\n\t\tif (html == last) throw \"Parse Error: \" + html;\n\t\tlast = html;\n\t}\n\n\t// Clean up any remaining tags\n\tparseEndTag();\n\n\tfunction parseStartTag(tag, tagName, rest, unary) {\n\t\ttagName = tagName.toLowerCase();\n\n\t\tif (block[tagName]) {\n\t\t\twhile (stack.last() && inline[stack.last()]) {\n\t\t\t\tparseEndTag(\"\", stack.last());\n\t\t\t}\n\t\t}\n\n\t\tif (closeSelf[tagName] && stack.last() == tagName) {\n\t\t\tparseEndTag(\"\", tagName);\n\t\t}\n\n\t\tunary = empty[tagName] || !!unary;\n\n\t\tif (!unary) stack.push(tagName);\n\n\t\tif (handler.start) {\n\t\t\tvar attrs = [];\n\n\t\t\trest.replace(attr, function (match, name) {\n\t\t\t\tvar value = arguments[2] ? arguments[2] : arguments[3] ? arguments[3] : arguments[4] ? arguments[4] : fillAttrs[name] ? name : \"\";\n\n\t\t\t\tattrs.push({\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tescaped: value.replace(/(^|[^\\\\])\"/g, '$1\\\\\\\"') //\"\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (handler.start) {\n\t\t\t\thandler.start(tagName, attrs, unary);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseEndTag(tag, tagName) {\n\t\t// If no tag name is provided, clean shop\n\t\tif (!tagName) var pos = 0;\n\n\t\t// Find the closest opened tag of the same type\n\t\telse {\n\t\t\t\ttagName = tagName.toLowerCase();\n\t\t\t\tfor (var pos = stack.length - 1; pos >= 0; pos--) {\n\t\t\t\t\tif (stack[pos] == tagName) break;\n\t\t\t\t}\n\t\t\t}\n\t\tif (pos >= 0) {\n\t\t\t// Close all the open elements, up the stack\n\t\t\tfor (var i = stack.length - 1; i >= pos; i--) {\n\t\t\t\tif (handler.end) handler.end(stack[i]);\n\t\t\t} // Remove the open elements from the stack\n\t\t\tstack.length = pos;\n\t\t}\n\t}\n};\n\nfunction makeMap(str) {\n\tvar obj = {},\n\t    items = str.split(\",\");\n\tfor (var i = 0; i < items.length; i++) {\n\t\tobj[items[i]] = true;\n\t}return obj;\n}\n\nmodule.exports = HTMLParser;"]}